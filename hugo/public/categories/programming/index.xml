<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on David Calhoun&#39;s blog</title>
    <link>https://www.davidbcalhoun.com/categories/programming/</link>
    <description>Recent content in Programming on David Calhoun&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 08 Jul 2010 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://www.davidbcalhoun.com/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Thursday links (July 8)</title>
      <link>https://www.davidbcalhoun.com/2010/thursday-links-july-8/</link>
      <pubDate>Thu, 08 Jul 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2010/thursday-links-july-8/</guid>
      <description>Mobile YouTube Mobile Gets a Kick Start
Battle of Champions: HTC Droid Incredible vs. Palm Pre Plus
Designing for the Retina Display (326ppi)
AUDIO: John Resig: You Don’t Know Mobile (Webstyle Magazine) &amp;#8211; ~$5,000 minimum to do mobile testing
Tapworthy: Designing Great iPhone Apps
eMobile: We have the fastest network in Japan!
Apple iPad User Analysis — Phase II
VIDEO: Using iPhone with a Braille display (Victor Tsaran)
Mobile Access 2010 (Pew Research)</description>
    </item>
    
    <item>
      <title>Using mobile-specific HTML, CSS, and JavaScript (Mobile web part 5)</title>
      <link>https://www.davidbcalhoun.com/2010/using-mobile-specific-html-css-and-javascript-mobile-web-part-5/</link>
      <pubDate>Tue, 29 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2010/using-mobile-specific-html-css-and-javascript-mobile-web-part-5/</guid>
      <description>(updated June 27, 2011)
Mobile-specific HTML Viewport tag Use the viewport tag to properly fit the content to the screen:
&amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot;/&amp;gt;  Tel scheme (to initiate phone calls) &amp;lt;a href=&amp;quot;tel:18005555555&amp;quot;&amp;gt;Call us at 1-800-555-5555&amp;lt;/a&amp;gt;  Sms scheme (to initiate text messages) &amp;lt;a href=&amp;quot;sms:18005555555&amp;quot;&amp;gt; &amp;lt;a href=&amp;quot;sms:18005555555,18005555556&amp;quot;&amp;gt; &amp;lt;!-- multiple recipients --&amp;gt; &amp;lt;a href=&amp;quot;sms:18005555555?body=Text%20goes%20here&amp;quot;&amp;gt; &amp;lt;!-- predefined message body --&amp;gt;  Disable automatic telephone number linking &amp;lt;meta name=&amp;quot;format-detection&amp;quot; content=&amp;quot;telephone=no&amp;quot;&amp;gt;  iOS-specific HTML (some work on Android as well) You also have access to several Apple-specific tags to use in your iOS applications (iPhone, iPad, and don&amp;rsquo;t forget the iPod Touch!</description>
    </item>
    
    <item>
      <title>How to install obsolete Android Virtual Devices (AVDs)</title>
      <link>https://www.davidbcalhoun.com/2010/how-to-install-obsolete-android-virtual-devices-avds/</link>
      <pubDate>Wed, 09 Jun 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2010/how-to-install-obsolete-android-virtual-devices-avds/</guid>
      <description>Apparently it&amp;#8217;s no longer possible to easily download Android versions 2.0 and 2.0.1 from the AVD Manager. I noticed this problem when I got a new machine and had to install everything from scratch. In the future I suspect even more AVDs will be made obsolete, so this solution also applies to them.
Why would you want to install obsolete AVDs? In my case it&amp;#8217;s a matter of research: I simply want to see the progress of features being added to its browser, and track those changes over time.</description>
    </item>
    
    <item>
      <title>Links for the week of February 21, 2010</title>
      <link>https://www.davidbcalhoun.com/2010/links-for-the-week-of-february-21-2010/</link>
      <pubDate>Sun, 28 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2010/links-for-the-week-of-february-21-2010/</guid>
      <description> General links  Video: Flash performance on the Nexus One   censorzilla   PHP compiler performance &amp;#8211; PHP Classes blog   Mobile  10 Great Tools to Create a Mobile Version of Your Site   </description>
    </item>
    
    <item>
      <title>Links for the week of February 14, 2010</title>
      <link>https://www.davidbcalhoun.com/2010/links-for-the-week-of-february-14-2010/</link>
      <pubDate>Sun, 21 Feb 2010 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2010/links-for-the-week-of-february-14-2010/</guid>
      <description>General links  What really happens when you navigate to a URL &amp;#8211; great in-depth explanation of computer-to-server transactions. With pictures!  (Google) Update on Qualified Developer Program &amp;#8211; some insight into the motivation behind Google&amp;#8217;s Qualified Developer Program   HTML5/CSS3 and new web technology   I Can&amp;#8217;t Believe It&amp;#8217;s Not Flash: Thomas Fuchs&amp;#8217;s slides from his presentation at Webstock 2010   You Can Use CSS3 Right Now   Designing for the Future with HTML5+CSS3 : Tutorials and Best Practices   &amp;lt;h3&amp;gt; Mobile &amp;lt;/h3&amp;gt; &amp;lt;ul class=&amp;quot;links&amp;quot;&amp;gt; &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;http://www.</description>
    </item>
    
    <item>
      <title>PastryKit: digging into an Apple Pie</title>
      <link>https://www.davidbcalhoun.com/2009/pastrykit-digging-into-an-apple-pie/</link>
      <pubDate>Wed, 16 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2009/pastrykit-digging-into-an-apple-pie/</guid>
      <description>Yesterday John Gruber wrote about Apple&amp;#8217;s PastryKit, iPhone&amp;#8217;s JavaScript framework that&amp;#8217;s been discovered &amp;#8220;in the wild&amp;#8221; on the iPhone user guide at http://help.apple.com/iphone/3/mobile/. There&amp;#8217;s a few ways to access the page:
 with an actual iPhone or iTouch by browsing with an iPhone/iTouch user agent. If you&amp;#8217;re using Safari, enable the Developer menu in Safari&amp;gt;Preferences&amp;gt;Advanced and switching user agents by clicking on Develope&amp;gt;User Agent  What&amp;#8217;s all the big fuss?</description>
    </item>
    
    <item>
      <title>JavaScript tidbit: special variables ($, $$, _, etc)</title>
      <link>https://www.davidbcalhoun.com/2009/javascript-tidbit-special-variables---_-etc/</link>
      <pubDate>Tue, 08 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2009/javascript-tidbit-special-variables---_-etc/</guid>
      <description>You&amp;rsquo;re probably used to typical variables names such as the following:
var personName = &#39;Joe&#39;;  You may not realize it, but there are some non-alphanumeric variables at your disposal.
Using $ For instance, the $ variable has been made popular by several JavaScript libraries, most notably jQuery. You can use it to alias operations that are commonly performed, such as the following (1):
var $ = document.getElementById; var myElement = $(&#39;targetElement&#39;);  If you declare this variable outside of a function it will be a global variable and will compete with libraries that use the same global variable, so it&amp;rsquo;s probably best not to use it.</description>
    </item>
    
    <item>
      <title>PHP: dealing with stuff that doesn&#39;t exist</title>
      <link>https://www.davidbcalhoun.com/2009/php-dealing-with-stuff-that-doesnt-exist/</link>
      <pubDate>Tue, 01 Dec 2009 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2009/php-dealing-with-stuff-that-doesnt-exist/</guid>
      <description>Introduction As the application you&amp;#8217;re coding becomes more and more complex, there&amp;#8217;s more of an opportunity for things to go wrong in all sorts of unforseen ways. One of these problems is variables or functions that don&amp;#8217;t exist. The problem is when you code in such a way that you presuppose their existence. But their existence isn&amp;#8217;t guaranteed!
A simple case of this happening is when you&amp;#8217;re dealing with user input.</description>
    </item>
    
    <item>
      <title>Pitfalls of declaring variables in JavaScript</title>
      <link>https://www.davidbcalhoun.com/2009/pitfalls-of-declaring-variables-in-javascript/</link>
      <pubDate>Wed, 18 Nov 2009 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2009/pitfalls-of-declaring-variables-in-javascript/</guid>
      <description>Introduction One of the things that&amp;#8217;s always been confusing to me is that there are multiple ways to declare variables in JavaScript, and some ways are better than others. For the beginner programmer, just getting to code to work means complete success, but for the intermediate or advanced programmer, this is just the first step. The next step is to clean up the code and make sure everything is written in the best way it could have been written.</description>
    </item>
    
    <item>
      <title>JavaScript Tidbit: Block scope with let</title>
      <link>https://www.davidbcalhoun.com/2009/javascript-tidbit-block-scope-with-let/</link>
      <pubDate>Tue, 15 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2009/javascript-tidbit-block-scope-with-let/</guid>
      <description>JavaScript has functional scope. Meaning that if you (properly) define variables within functions, those variables remain accessible only inside the function.
Block scope, on the other hand, defines scope within a block of code, usually defined by braces. JavaScript now has block scope as of version 1.7, which means it&amp;#8217;s available in these browsers:
 Firefox 2+  Block scope is enabled in JavaScript with the use of &amp;#8220;let&amp;#8221;:
let(x=100) { alert(x); }; It also works perfectly well on one line, without the use of braces:</description>
    </item>
    
    <item>
      <title>JavaScript Tidbit: Shorthand Object Instantiation</title>
      <link>https://www.davidbcalhoun.com/2009/javascript-tidbit-shorthand-object-instantiation/</link>
      <pubDate>Mon, 14 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2009/javascript-tidbit-shorthand-object-instantiation/</guid>
      <description>The skinny: here&amp;#8217;s a neat little trick to reduce the amount of code users have to type to instantiate objects:
function jQuery(str, con){ if ( window == this ) return new jQuery(str, con); // ... } new jQuery(&amp;quot;#foo&amp;quot;); // this is now equivalent... jQuery(&amp;quot;#foo&amp;quot;); // ...to this!  {:lang=&amp;ldquo;js&amp;rdquo;}
Explanation: when jQuery(&amp;#8220;#foo&amp;#8221;) is typed, the function first determines if the context in which it&amp;#8217;s being called is the global object (window).</description>
    </item>
    
    <item>
      <title>PHP Tidbit: Dead simple singleton</title>
      <link>https://www.davidbcalhoun.com/2009/php-tidbit-dead-simple-singleton/</link>
      <pubDate>Mon, 14 Sep 2009 00:00:00 +0000</pubDate>
      
      <guid>https://www.davidbcalhoun.com/2009/php-tidbit-dead-simple-singleton/</guid>
      <description>class Singleton { private static $instance; public static function getInstance() { if(!isset(self::$instance)) { $c = __CLASS__; self::$instance = new $c(); } return self::$instance; } } And the explanation&amp;#8230;
class Singleton { private static $instance; // static variable to hold our 1 instance public static function getInstance() { // function to get the 1 instance if(!isset(self::$instance)) { // this will only run once (and instantiate once) $c = __CLASS__; // get the class (Singleton) self::$instance = new $c(); // instantiate the class and store it in our variable } return self::$instance; // return the instance } public static function myFunction() { // we can get to this through Singleton::getInstance()-myFunction() // .</description>
    </item>
    
  </channel>
</rss>