<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Map on David Calhoun's blog</title><link>https://www.davidbcalhoun.com/tags/map/</link><description>Recent content in Map on David Calhoun's blog</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Sun, 26 Aug 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://www.davidbcalhoun.com/tags/map/index.xml" rel="self" type="application/rss+xml"/><item><title>A Simple Introduction to Javascript Map and Reduce Array Helper Functions</title><link>https://www.davidbcalhoun.com/2018/a-simple-introduction-to-javascript-map-and-reduce-array-helper-functions/</link><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2018/a-simple-introduction-to-javascript-map-and-reduce-array-helper-functions/</guid><description>&lt;link itemprop="mainEntityOfPage" href="https://en.wikipedia.org/wiki/JavaScript">
&lt;p>Perhaps you&amp;rsquo;ve been programming for a while, and you&amp;rsquo;re pretty comfortable using &lt;code>for&lt;/code> loops to traverse Arrays. However, you know how untidy and complicated &lt;code>for&lt;/code> loops can get, and you are interested in better approaches to keep the code clean. Enter &lt;code>map&lt;/code> and &lt;code>reduce&lt;/code>!&lt;/p>
&lt;h2 id="first-steps-with-for-loops">First steps with &lt;code>for&lt;/code> loops&lt;/h2>
&lt;p>Most folks find &lt;code>for&lt;/code> loops powerful enough to achieve all they need when they need to process items in an &lt;code>Array&lt;/code>. For example, say we have a simple list of items:&lt;/p></description></item></channel></rss>