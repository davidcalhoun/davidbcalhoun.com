<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Functional Programming on David Calhoun's blog</title><link>https://www.davidbcalhoun.com/tags/functional-programming/</link><description>Recent content in Functional Programming on David Calhoun's blog</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.davidbcalhoun.com/tags/functional-programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Javascript Bind, Partial Application, and Currying</title><link>https://www.davidbcalhoun.com/2020/javascript-bind-partial-application-and-currying/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2020/javascript-bind-partial-application-and-currying/</guid><description>&lt;figure itemprop="image" itemscope itemtype="https://schema.org/ImageObject" class="center landscape">
 
 &lt;a href="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" class="picture">
 &lt;picture>
 &lt;span itemscope itemprop="author" itemtype="https://schema.org/Person">
 &lt;meta itemprop="name" content="David Calhoun" />
 &lt;meta itemprop="url" content="https://www.themaingate.net" />
 &lt;/span>
 
 &lt;meta itemprop="caption" content="HAL 9000 computer interface from Stanley Kubrick&amp;#39;s 2001" />
 
 
 &lt;meta itemprop="name" content="HAL 9000 interface, showing HAL&amp;#39;s centered fisheye camera lens with code readouts on eight screens, four on each side of HAL&amp;#39;s camera." />
 
 
 &lt;meta itemprop="width" content="2000" />
 
 
 &lt;meta itemprop="height" content="1125" />
 
 &lt;span itemscope itemprop="thumbnail" itemtype="https://schema.org/ImageObject">
 &lt;meta itemprop="url" content="/wp-content/uploads/2020/2001-500px-resize.jpeg" />
 &lt;/span>
 
 
 
 &lt;meta itemprop="isFamilyFriendly" content="true" />

 &lt;source type="image/webp" media="(max-width: 500px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-500px-resize.webp" />
 &lt;source type="image/webp" media="(max-width: 1000px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-1000px-resize.webp" />
 &lt;source type="image/webp" media="(min-width: 1001px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.webp" />

 &lt;source type="image/jpeg" media="(max-width: 500px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-500px-resize.jpeg" />
 &lt;source type="image/jpeg" media="(max-width: 1000px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-1000px-resize.jpeg" />
 &lt;source type="image/jpeg" media="(min-width: 1001px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" />

 &lt;img data-foo="2" itemprop="url" src="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" loading="lazy" alt="HAL 9000 interface, showing HAL&amp;#39;s centered fisheye camera lens with code readouts on eight screens, four on each side of HAL&amp;#39;s camera." width="2000" height="1125" style="aspect-ratio: 2000 / 1125;" />
 &lt;/picture>
 &lt;/a>
 
 &lt;figcaption>HAL 9000 computer interface from Stanley Kubrick&amp;#39;s 2001&lt;/figcaption>
 &lt;/figure>
 
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>Partial application and currying often get muddled; they are related but not the same. They&amp;rsquo;re both techniques that transform functions that accept multiple arguments, but the difference is in the transformation.&lt;/p></description></item><item><title>A Simple Introduction to Javascript Map and Reduce Array Helper Functions</title><link>https://www.davidbcalhoun.com/2018/a-simple-introduction-to-javascript-map-and-reduce-array-helper-functions/</link><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2018/a-simple-introduction-to-javascript-map-and-reduce-array-helper-functions/</guid><description>&lt;link itemprop="mainEntityOfPage" href="https://en.wikipedia.org/wiki/JavaScript">
&lt;p>Perhaps you&amp;rsquo;ve been programming for a while, and you&amp;rsquo;re pretty comfortable using &lt;code>for&lt;/code> loops to traverse Arrays. However, you know how untidy and complicated &lt;code>for&lt;/code> loops can get, and you are interested in better approaches to keep the code clean. Enter &lt;code>map&lt;/code> and &lt;code>reduce&lt;/code>!&lt;/p>
&lt;h2 id="first-steps-with-for-loops">First steps with &lt;code>for&lt;/code> loops&lt;/h2>
&lt;p>Most folks find &lt;code>for&lt;/code> loops powerful enough to achieve all they need when they need to process items in an &lt;code>Array&lt;/code>. For example, say we have a simple list of items:&lt;/p></description></item></channel></rss>