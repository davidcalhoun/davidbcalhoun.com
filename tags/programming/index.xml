<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on David Calhoun's blog</title><link>https://www.davidbcalhoun.com/tags/programming/</link><description>Recent content in Programming on David Calhoun's blog</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.davidbcalhoun.com/tags/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Javascript Bind, Partial Application, and Currying</title><link>https://www.davidbcalhoun.com/2020/javascript-bind-partial-application-and-currying/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2020/javascript-bind-partial-application-and-currying/</guid><description>&lt;figure itemprop="image" itemscope itemtype="https://schema.org/ImageObject" class="center landscape">
 
 &lt;a href="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" class="picture">
 &lt;picture>
 &lt;span itemscope itemprop="author" itemtype="https://schema.org/Person">
 &lt;meta itemprop="name" content="David Calhoun" />
 &lt;meta itemprop="url" content="https://www.themaingate.net" />
 &lt;/span>
 
 &lt;meta itemprop="caption" content="HAL 9000 computer interface from Stanley Kubrick&amp;#39;s 2001" />
 
 
 &lt;meta itemprop="name" content="HAL 9000 interface, showing HAL&amp;#39;s centered fisheye camera lens with code readouts on eight screens, four on each side of HAL&amp;#39;s camera." />
 
 
 &lt;meta itemprop="width" content="2000" />
 
 
 &lt;meta itemprop="height" content="1125" />
 
 &lt;span itemscope itemprop="thumbnail" itemtype="https://schema.org/ImageObject">
 &lt;meta itemprop="url" content="/wp-content/uploads/2020/2001-500px-resize.jpeg" />
 &lt;/span>
 
 
 
 &lt;meta itemprop="isFamilyFriendly" content="true" />

 &lt;source type="image/webp" media="(max-width: 500px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-500px-resize.webp" />
 &lt;source type="image/webp" media="(max-width: 1000px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-1000px-resize.webp" />
 &lt;source type="image/webp" media="(min-width: 1001px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.webp" />

 &lt;source type="image/jpeg" media="(max-width: 500px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-500px-resize.jpeg" />
 &lt;source type="image/jpeg" media="(max-width: 1000px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-1000px-resize.jpeg" />
 &lt;source type="image/jpeg" media="(min-width: 1001px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" />

 &lt;img data-foo="2" itemprop="url" src="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" loading="lazy" alt="HAL 9000 interface, showing HAL&amp;#39;s centered fisheye camera lens with code readouts on eight screens, four on each side of HAL&amp;#39;s camera." width="2000" height="1125" style="aspect-ratio: 2000 / 1125;" />
 &lt;/picture>
 &lt;/a>
 
 &lt;figcaption>HAL 9000 computer interface from Stanley Kubrick&amp;#39;s 2001&lt;/figcaption>
 &lt;/figure>
 
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>Partial application and currying often get muddled; they are related but not the same. They&amp;rsquo;re both techniques that transform functions that accept multiple arguments, but the difference is in the transformation.&lt;/p></description></item><item><title>A Simple Introduction to Javascript Map and Reduce Array Helper Functions</title><link>https://www.davidbcalhoun.com/2018/a-simple-introduction-to-javascript-map-and-reduce-array-helper-functions/</link><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2018/a-simple-introduction-to-javascript-map-and-reduce-array-helper-functions/</guid><description>&lt;link itemprop="mainEntityOfPage" href="https://en.wikipedia.org/wiki/JavaScript">
&lt;p>Perhaps you&amp;rsquo;ve been programming for a while, and you&amp;rsquo;re pretty comfortable using &lt;code>for&lt;/code> loops to traverse Arrays. However, you know how untidy and complicated &lt;code>for&lt;/code> loops can get, and you are interested in better approaches to keep the code clean. Enter &lt;code>map&lt;/code> and &lt;code>reduce&lt;/code>!&lt;/p>
&lt;h2 id="first-steps-with-for-loops">First steps with &lt;code>for&lt;/code> loops&lt;/h2>
&lt;p>Most folks find &lt;code>for&lt;/code> loops powerful enough to achieve all they need when they need to process items in an &lt;code>Array&lt;/code>. For example, say we have a simple list of items:&lt;/p></description></item><item><title>You Can't JavaScript Under Pressure walkthrough</title><link>https://www.davidbcalhoun.com/2013/you-cant-javascript-under-pressure-walkthrough/</link><pubDate>Fri, 04 Oct 2013 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2013/you-cant-javascript-under-pressure-walkthrough/</guid><description>&lt;p>A friend posted a link to this fun little quiz - &lt;a href="http://toys.usvsth3m.com/javascript-under-pressure/">You Can&amp;rsquo;t JavaScript Under Pressure&lt;/a>.&lt;/p>
&lt;p>The quizzes get more and more difficult, and they present a nice challenge if you fear your skills are getting rusty. Give it an honest try first, then come back here if you get seriously, honestly stuck. Try to do it yourself!&lt;/p>
&lt;h3 id="quiz-1-doubleinteger">Quiz 1: doubleInteger&lt;/h3>
&lt;h4 id="problem">Problem&lt;/h4>
&lt;pre>&lt;code>function doubleInteger(i) {
 // i will be an integer. Double it and return it.

 return i;
}
&lt;/code>&lt;/pre>
&lt;p>{:lang=&amp;ldquo;javascript&amp;rdquo;}&lt;/p></description></item><item><title>Descartes on building software frameworks</title><link>https://www.davidbcalhoun.com/2012/descartes-on-building-software-frameworks/</link><pubDate>Tue, 02 Oct 2012 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2012/descartes-on-building-software-frameworks/</guid><description>&lt;figure itemprop="image" itemscope="" itemtype="http://schema.org/ImageObject" class="center">
 &lt;meta itemprop="width" content="817" />
 &lt;meta itemprop="height" content="1000" />
 &lt;meta itemprop="url" content="https://www.davidbcalhoun.com/wp-content/uploads/2012/10/Frans_Hals_-_Portret_van_René_Descartes.jpeg" />
 &lt;a href="http://commons.wikimedia.org/wiki/File:Frans_Hals_-_Portret_van_Ren%C3%A9_Descartes.jpg">
 &lt;img itemprop="contentUrl" src="https://www.davidbcalhoun.com/wp-content/uploads/2012/10/Frans_Hals_-_Portret_van_René_Descartes.jpeg" alt="Rene Descartes" />
 &lt;/a>
 &lt;figcaption itemprop="caption">Rene Descartes&lt;/figcaption>
&lt;/figure>
&lt;p>Years ago I read Descartes&amp;rsquo;s &lt;a href="http://en.wikipedia.org/wiki/Discourse_on_the_Method">Discourse on Method&lt;/a> for what I found to be some of the more interesting philosophy courses of my college career: those of the history of modern philosophy. Modern philosophy technically starts with Descartes, so it&amp;rsquo;s a good place to start, or to get re-acquainted with philosophy in general.&lt;/p>
&lt;p>I&amp;rsquo;ve been reading through the Discourse again, and have found it to be more interesting and relatable this time around (particularly about lessons learned while traveling, but that&amp;rsquo;s a topic for another post).&lt;/p></description></item><item><title>Different ways of defining functions in JavaScript (this is madness!)</title><link>https://www.davidbcalhoun.com/2011/different-ways-of-defining-functions-in-javascript-this-is-madness/</link><pubDate>Fri, 24 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/different-ways-of-defining-functions-in-javascript-this-is-madness/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>Note: updated in July 2016 with ES6 arrow functions.&lt;/p>
&lt;p>&lt;a href="http://langtoday.com/?p=303">Russian translation&lt;/a> thanks to Yevgeniy Pyastolov&lt;/p>
&lt;h3 id="this-is-madness-this-is-javascript">This is madness! This&amp;hellip; is&amp;hellip; JavaScript!&lt;/h3>
&lt;p>In JavaScript, there&amp;rsquo;s many different ways of doing something. This is both a good thing and a bad thing. To the newcomer this is definitely a bad thing, as it means not only more things to learn, but more little caveats and more places to go wrong. And so it is with declaring functions!&lt;/p></description></item><item><title>Android 3.0 Honeycomb is first to implement the Device API</title><link>https://www.davidbcalhoun.com/2011/android-3.0-honeycomb-is-first-to-implement-the-device-api/</link><pubDate>Thu, 24 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/android-3.0-honeycomb-is-first-to-implement-the-device-api/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>I fired up the newly released Android 3.0 SDK to run some tests and found they&amp;rsquo;ve implemented part of the long-awaited &lt;a href="http://www.w3.org/2009/dap/">Device API&lt;/a> (aka the Media Capture API). From your browser you can now upload pictures and videos from the camera as well as sounds from the microphone. The returned data should be available to manipulate via the &lt;a href="http://www.w3.org/TR/FileAPI/">File API&lt;/a> (although I haven&amp;rsquo;t yet tested this).&lt;/p></description></item><item><title>My O'Reilly Books Wishlist</title><link>https://www.davidbcalhoun.com/2011/my-oreilly-books-wishlist/</link><pubDate>Tue, 22 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/my-oreilly-books-wishlist/</guid><description>&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Ok, so this post is only here in the hopes I&amp;rsquo;ll actually win something.&lt;/p>
&lt;p>&lt;a href="http://oreilly.com/new-year-2011.html">O&amp;rsquo;Reilly Books has a promotion&lt;/a> where a random winner will receive up to $500 of books on their wishlist, provided they post the list somewhere online. You can probably see why this is here then!&lt;/p>
&lt;h3 id="the-list">The List&lt;/h3>
&lt;p>&lt;a href="http://oreilly.com/catalog/9780596807788/">Programming the Mobile Web&lt;/a> ($50)&lt;br>
&lt;a href="http://oreilly.com/catalog/9780596155254/">Palm webOS&lt;/a> ($45)&lt;br>
&lt;a href="http://oreilly.com/catalog/9781449381561/">MongoDB: The Definitive Guide&lt;/a> ($40)&lt;br>
&lt;a href="http://oreilly.com/catalog/9781449393847/">JavaScript: The Definitive Guide: Rough Cuts Version, Sixth Edition&lt;/a> ($50)&lt;br>
&lt;a href="http://oreilly.com/catalog/9780596806026/">HTML5: Up and Running&lt;/a> ($30)&lt;br>
&lt;a href="http://oreilly.com/catalog/9781449383268/">Building Android Apps with HTML, CSS, and JavaScript&lt;/a> ($30)&lt;br>
&lt;a href="http://oreilly.com/catalog/9780596805784/">Building iPhone Apps with HTML, CSS, and JavaScript&lt;/a> ($30)&lt;br>
&lt;a href="http://oreilly.com/catalog/9780596157609/">HTML &amp;amp; CSS: The Good Parts&lt;/a> ($35)&lt;br>
&lt;a href="http://oreilly.com/catalog/9781449393908/">HTML5 Canvas&lt;/a> ($40)&lt;br>
&lt;a href="http://oreilly.com/catalog/9780596159771/">jQuery Cookbook&lt;/a> ($35)&lt;br>
&lt;a href="http://oreilly.com/catalog/9781449390501/">Learning Android&lt;/a> ($35)&lt;br>
&lt;a href="http://oreilly.com/catalog/9780596155933/">CSS Cookbook, Third Edition&lt;/a> ($50)&lt;/p></description></item><item><title>Improving yourself as a programmer versus as a human being</title><link>https://www.davidbcalhoun.com/2011/improving-yourself-as-a-programmer-versus-as-a-human-being/</link><pubDate>Sun, 20 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/improving-yourself-as-a-programmer-versus-as-a-human-being/</guid><description>&lt;p>(OR &amp;ldquo;The Post In Which I Conflate Programming and Philosophy&amp;rdquo; OR &amp;ldquo;The Programmer&amp;rsquo;s Existentialist Crisis&amp;rdquo;)&lt;/p>
&lt;p>I woke up this morning to read Dmitry A. Soshnikov&amp;rsquo;s tweet:&lt;br>
&lt;a href="http://twitter.com/#!/DmitrySoshnikov/status/39356492058607616">&lt;img src="http://davidbcalhoun.com/wp-content/uploads/2011/02/two-programming-languages.png" alt="Have one-two langs in which you are a master and know professionally, and in addition, consider alternative langs. Your experience will grow." width="661" height="318" class="aligncenter size-full wp-image-639" />&lt;/a>&lt;/p>
&lt;p>While this seems like good advice for aspiring programmers, I can&amp;rsquo;t help but think what this means for those who will buy into this. Us programmers have a keen ability to sit and focus on problems for extended periods of time, usually to the detriment of everything else around us. From the perspective of &amp;ldquo;real life&amp;rdquo;, we might as well be sitting in a basement somewhere playing World of Warcraft. Sure, programming is more productive, profitable, and surely not brainless, but at the end of the day we could still only be sitting in a basement somewhere. What I mean to say here is that we&amp;rsquo;re not actually living our actual lives doing these things.&lt;/p></description></item><item><title>Checking for undefined, null, and empty variables in JavaScript</title><link>https://www.davidbcalhoun.com/2011/checking-for-undefined-null-and-empty-variables-in-javascript/</link><pubDate>Fri, 11 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/checking-for-undefined-null-and-empty-variables-in-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>In general it&amp;rsquo;s a good practice to check for the existence of something before blindly using it by faith and hoping it works. There are various times during the execution of scripts when a variable may not be defined, it may be null, or it might be an empty string. These are three things that are easily conflated. A good way to look at this is thinking of these as having increasing levels of existence (getting a bit philosophical here for a moment&amp;hellip;):&lt;/p></description></item><item><title>JavaScript news resources</title><link>https://www.davidbcalhoun.com/2011/javascript-news-resources/</link><pubDate>Fri, 14 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/javascript-news-resources/</guid><description>&lt;p>There&amp;rsquo;s an overwhelming amount of information being pumped out of the JavaScript community each week, but how do you keep up with it? Here&amp;rsquo;s some sources to keep you busy.&lt;/p>
&lt;h3 id="twitter">Twitter&lt;/h3>
&lt;p>This merits a category of its own. This has replaced the RSS reader for a lot of folks, or at the very least supplemented it.&lt;/p>
&lt;p>I&amp;rsquo;ve consistently recommended &lt;a href="http://twitter.com/#!/nathansmith/javascript/">Nathan Smith&amp;rsquo;s list of JavaScript folks&lt;/a>. When I&amp;rsquo;m diligent, I keep up with this several times a week and &lt;a href="http://twitter.com/#!/franksvalli/favorites/">favorite items from the feed&lt;/a> to be considered for inclusion in that week&amp;rsquo;s &lt;a href="http://jsmag.com/blog/">JSMag Blog update&lt;/a>.&lt;/p></description></item><item><title>What happens when you have no JavaScript fallback?</title><link>https://www.davidbcalhoun.com/2011/what-happens-when-you-have-no-javascript-fallback/</link><pubDate>Wed, 12 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/what-happens-when-you-have-no-javascript-fallback/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>&lt;a href="http://davidbcalhoun.com/wp-content/uploads/2011/01/twitter-fallback.png">&lt;img src="http://davidbcalhoun.com/wp-content/uploads/2011/01/twitter-fallback.png" alt="" title="Twitter no-JavaScript fallback" class="aligncenter size-full wp-image-556" />&lt;/a>&lt;/p>
&lt;p>Here&amp;rsquo;s an example of what happens when your interface completely relies on JavaScript. There&amp;rsquo;s code with translated &lt;a href="http://en.wikipedia.org/wiki/Mojibake">mojibake&lt;/a> of some sort which caused the JavaScript to break. The code wasn&amp;rsquo;t in a try-catch block, so it caused all of the code on the page to fail, thus presenting me with the only part of the screen that wasn&amp;rsquo;t generated by JavaScript: the completely useless header.&lt;/p></description></item><item><title>How to spot outdated JavaScript</title><link>https://www.davidbcalhoun.com/2011/how-to-spot-outdated-javascript/</link><pubDate>Fri, 07 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/how-to-spot-outdated-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Those that are just setting out to learn JavaScript are typically overwhelmed by the amount of online resources to be found about learning JavaScript. Not only this, but every webpage visited presents a potential learning opportunity just by inspecting the source.&lt;/p>
&lt;p>However, not all resources are guaranteed to be up-to-date. JavaScript has been around for over a decade, and coding standards have changed drastically over time. While a code snippet may still work in today&amp;rsquo;s browsers, you may unknowingly be using an outdated practice that might eventually lead to a bit of embarrassment.&lt;/p></description></item><item><title>Mobile JavaScript libraries and frameworks (Mobile Web Part 7)</title><link>https://www.davidbcalhoun.com/2010/mobile-javascript-libraries-and-frameworks-mobile-web-part-7/</link><pubDate>Mon, 06 Dec 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/mobile-javascript-libraries-and-frameworks-mobile-web-part-7/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="intro">Intro&lt;/h3>
&lt;p>This is designed to be a &amp;ldquo;living&amp;rdquo; post of available materials which will hopefully be updated frequently.&lt;/p>
&lt;p>Right now there&amp;rsquo;s not much, just some links, but I hope to keep adding materials, so check back!&lt;/p>
&lt;h3 id="the-list">The List&lt;/h3>
&lt;p>&lt;a href="http://www.sencha.com/products/touch/">Sencha Touch&lt;/a>&lt;br>
&lt;a href="http://www.phonegap.com/">PhoneGap&lt;/a> - native wrapper which provides access to native hardware through their own JavaScript APIs&lt;br>
&lt;a href="http://jquerymobile.com/">jQuery Mobile&lt;/a> - a separate mobile UI which has jQuery as a dependency&lt;br>
&lt;a href="http://developer.apple.com/iad/">iAd&lt;/a> - an update to Apple&amp;rsquo;s PastryKit, but probably intended only for ads&lt;br>
&lt;a href="http://zeptojs.com/">Zepto.js&lt;/a>&lt;br>
&lt;a href="http://joapp.com/">Jo HTML5 Mobile App Framework&lt;/a>&lt;br>
&lt;a href="http://touch.sproutcore.com/hedwig/">Sproutcore Touch&lt;/a>&lt;br>
&lt;a href="http://unify.github.com/unify/">Unify&lt;/a>&lt;br>
&lt;a href="http://developer.yahoo.com/yui/3/">YUI3&lt;/a> - the desktop library has taken its first steps in supporting mobile (there&amp;rsquo;s no separate version just for mobile)&lt;br>
&lt;a href="http://www.springsource.org/spring-mobile">Spring Mobile&lt;/a>: an extension to Spring MVC.&lt;br>
&lt;a href="http://pyxismobile.com/">pyxis mobile&lt;/a>&lt;br>
&lt;a href="http://www.winktoolkit.org/">Wink Toolkit&lt;/a>&lt;br>
&lt;a href="http://chocolatechipmobile.wordpress.com/">ChocolateChip Mobile&lt;/a>&lt;br>
&lt;a href="http://webapp-net.com/">WebApp.Net&lt;/a>&lt;br>
&lt;a href="http://paularmstrongdesigns.com/projects/basejs/">baseJS&lt;/a>&lt;br>
&lt;a href="http://xuijs.com/">XUI&lt;/a>&lt;br>
&lt;a href="http://iwebkit.net/">iWebKit&lt;/a>&lt;br>
&lt;a href="http://www.jqtouch.com/">jQTouch&lt;/a>&lt;br>
&lt;a href="http://notes.sencha.com/post/1483278482/wed-like-to-extend-a-warm-welcome-to-one-of-our">MooTouch&lt;/a> - acquired and integrated into Sencha&lt;br>
&lt;a href="http://code.google.com/p/iphone-universal/">UiUIKit (Universal iPhone UI Kit)&lt;/a>&lt;br>
&lt;a href="http://code.google.com/p/ciui-dev/">CiUI&lt;/a> - CNET iPhone UI&lt;br>
&lt;a href="">UiUIKit&lt;/a>&lt;br>
&lt;a href="http://www.iui-js.org/">iUI&lt;/a> (&lt;a href="http://code.google.com/p/iui/">on Google Code&lt;/a>) - the first library for the iPhone as far as I know.&lt;br>
&lt;a href="http://davidbcalhoun.com/2009/pastrykit-digging-into-an-apple-pie">PastryKit&lt;/a> - Apple&amp;rsquo;s proprietary framework, peeked into just for curiousity (not recommended for use)&lt;/p></description></item><item><title>JavaScript links from last week (September 26)</title><link>https://www.davidbcalhoun.com/2010/javascript-links-from-last-week-september-26/</link><pubDate>Tue, 05 Oct 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/javascript-links-from-last-week-september-26/</guid><description>&lt;p>&lt;a href="http://erkie.github.com/">JavaScript Asteroids&lt;/a> - blow up any webpage with this bookmarklet!&lt;/p>
&lt;p>&lt;a href="http://js1k.com">JS1k contest&lt;/a> - and the &lt;a href="http://marijn.haverbeke.nl/js1k.html">winner&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.wait-till-i.com/2010/09/26/promote-better-javascript-documentation-with-promotejs/">PromoteJS&lt;/a> - Google bombing with a good intent. Better links to JavaScript documentation!&lt;/p>
&lt;p>&lt;a href="http://webkit.org/blog/1395/running-scripts-in-webkit/">Async and defer attributes for Script tags added to WebKit&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://samy.pl/evercookie/">Evercookie&lt;/a> - uses devious ways to try to track users. Hmm, this one is questionable. Please use it for good, not evil&amp;hellip; :/&lt;/p>
&lt;p>&lt;a href="http://jsperf.com">JSPerf.com&lt;/a> - not really new news, but a nice quick way to test algorithm performance in JavaScript&lt;/p></description></item><item><title>Friday links: mobile performance studies, the upcoming device element, and more (July 15)</title><link>https://www.davidbcalhoun.com/2010/friday-links-mobile-performance-studies-the-upcoming-device-element-and-more-july-15/</link><pubDate>Fri, 16 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/friday-links-mobile-performance-studies-the-upcoming-device-element-and-more-july-15/</guid><description>&lt;h3 id="mobile">Mobile&lt;/h3>
&lt;p>&lt;a href="http://www.flickr.com/photos/spierisf/4776109875/">Flickr for iPhone 1.2 released&lt;/a>&lt;br>
&lt;a href="http://techcrunch.com/2010/07/15/firefox-iphone/">Firefox Home For iPhone Approved, Lets You Sync Bookmarks, Open Tabs And More&lt;/a>&lt;br>
&lt;a href="http://my.opera.com/ODIN/blog/2010/07/15/opera-mobile-10-1-for-s60">Opera Mobile 10.1 for S60&lt;/a>: W3C gelocation, border-radius &amp;amp; 2D transforms on S60 platform&lt;br>
&lt;a href="http://www.yuiblog.com/blog/2010/07/12/mobile-browser-cache-limits-revisited/">Mobile Browser Cache Limits, Revisited&lt;/a> by Ryan Grove&lt;br>
&lt;a href="http://www.stevesouders.com/blog/2010/07/12/mobile-cache-file-sizes/">Mobile cache file sizes&lt;/a> (and other performance tests on mobile devices) by Steve Souders&lt;br>
&lt;a href="http://ipadtest.wordpress.com/2010/07/12/out-of-nowhere-the-ipad-has-a-real-competitor/">Out Of Nowhere, The iPad Has A Real Competitor&lt;/a>: the Android-based Pandigital Novel&lt;br>
&lt;a href="http://gigaom.com/2010/07/13/charles-jolley-srpoutcore-strobe/">Ex-Apple Javascript Guru: HTML5 and Native Apps Can Live Together&lt;/a>&lt;/p></description></item><item><title>Video: John Resig - Testing, Performance Analysis, and jQuery 1.4</title><link>https://www.davidbcalhoun.com/2009/video-john-resig-testing-performance-analysis-and-jquery-1.4/</link><pubDate>Mon, 21 Dec 2009 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2009/video-john-resig-testing-performance-analysis-and-jquery-1.4/</guid><description>&lt;p>In case you hadn’t seen it yet, &lt;a href="http://ejohn.org/">John Resig&lt;/a> was kind enough to stop by Yahoo! for the December &lt;a href="http://www.meetup.com/BayJax/">Bayjax&lt;/a> meetup. Here’s the &lt;a href="https://www.youtube.com/watch?v=72wh5PnEf1k">video&lt;/a>:&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/72wh5PnEf1k" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>&lt;/iframe>
&lt;p>Usually developers are more interested in just getting the dang code to work, and as a result actual the testing and maintenance of JavaScript isn’t talked about too much, so I’m sure this will be new territory for many developers. And since it’s John Resig speaking, there was of course a bit about using &lt;a href="http://testswarm.com/">TestSwarm&lt;/a>, a testing distributed framework-agnostic automated testing tool (that’s a mouthful!).&lt;/p></description></item><item><title>Ways of passing data to functions in JavaScript</title><link>https://www.davidbcalhoun.com/2009/ways-of-passing-data-to-functions-in-javascript/</link><pubDate>Fri, 04 Dec 2009 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2009/ways-of-passing-data-to-functions-in-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>Passing data is quite important in functional programming languages like JavaScript. When there are multiple functions (which is most of the time), there needs to be a way to pass data between the functions. This is done by passing values in parenthesis: myFunction(myData). Even when there is no data to be passed, we still have to declare and execute functions by using parenthesis: myFunction().&lt;/p></description></item></channel></rss>