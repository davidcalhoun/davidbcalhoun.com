<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Javascript on David Calhoun's blog</title><link>https://www.davidbcalhoun.com/tags/javascript/</link><description>Recent content in Javascript on David Calhoun's blog</description><generator>Hugo</generator><language>en-US</language><lastBuildDate>Tue, 16 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://www.davidbcalhoun.com/tags/javascript/index.xml" rel="self" type="application/rss+xml"/><item><title>Javascript Bind, Partial Application, and Currying</title><link>https://www.davidbcalhoun.com/2020/javascript-bind-partial-application-and-currying/</link><pubDate>Tue, 16 Jun 2020 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2020/javascript-bind-partial-application-and-currying/</guid><description>&lt;figure itemprop="image" itemscope itemtype="https://schema.org/ImageObject" class="center landscape">
 
 &lt;a href="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" class="picture">
 &lt;picture>
 &lt;span itemscope itemprop="author" itemtype="https://schema.org/Person">
 &lt;meta itemprop="name" content="David Calhoun" />
 &lt;meta itemprop="url" content="https://www.themaingate.net" />
 &lt;/span>
 
 &lt;meta itemprop="caption" content="HAL 9000 computer interface from Stanley Kubrick&amp;#39;s 2001" />
 
 
 &lt;meta itemprop="name" content="HAL 9000 interface, showing HAL&amp;#39;s centered fisheye camera lens with code readouts on eight screens, four on each side of HAL&amp;#39;s camera." />
 
 
 &lt;meta itemprop="width" content="2000" />
 
 
 &lt;meta itemprop="height" content="1125" />
 
 &lt;span itemscope itemprop="thumbnail" itemtype="https://schema.org/ImageObject">
 &lt;meta itemprop="url" content="/wp-content/uploads/2020/2001-500px-resize.jpeg" />
 &lt;/span>
 
 
 
 &lt;meta itemprop="isFamilyFriendly" content="true" />

 &lt;source type="image/webp" media="(max-width: 500px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-500px-resize.webp" />
 &lt;source type="image/webp" media="(max-width: 1000px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-1000px-resize.webp" />
 &lt;source type="image/webp" media="(min-width: 1001px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.webp" />

 &lt;source type="image/jpeg" media="(max-width: 500px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-500px-resize.jpeg" />
 &lt;source type="image/jpeg" media="(max-width: 1000px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-1000px-resize.jpeg" />
 &lt;source type="image/jpeg" media="(min-width: 1001px)" srcset="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" />

 &lt;img data-foo="2" itemprop="url" src="https://www.davidbcalhoun.com/wp-content/uploads/2020/2001-2000px-resize.jpeg" loading="lazy" alt="HAL 9000 interface, showing HAL&amp;#39;s centered fisheye camera lens with code readouts on eight screens, four on each side of HAL&amp;#39;s camera." width="2000" height="1125" style="aspect-ratio: 2000 / 1125;" />
 &lt;/picture>
 &lt;/a>
 
 &lt;figcaption>HAL 9000 computer interface from Stanley Kubrick&amp;#39;s 2001&lt;/figcaption>
 &lt;/figure>
 
&lt;h2 id="summary">Summary&lt;/h2>
&lt;p>Partial application and currying often get muddled; they are related but not the same. They&amp;rsquo;re both techniques that transform functions that accept multiple arguments, but the difference is in the transformation.&lt;/p></description></item><item><title>Matching Accented Strings in Javascript</title><link>https://www.davidbcalhoun.com/2019/matching-accented-strings-in-javascript/</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2019/matching-accented-strings-in-javascript/</guid><description>&lt;h2 id="the-problem-accented-characters-versus-user-input">The problem: accented characters versus user input&lt;/h2>
&lt;p>I&amp;rsquo;ve really been enjoying (wait for it, unpaid endorsement) &lt;a href="https://www.criterionchannel.com/">The Criterion Channel&lt;/a> since it launched earlier this year. The app and the website are nascent and therefore have had their share of problems, but to their credit they have been hard at work making things smoother day by day.&lt;/p>
&lt;p>But one big annoying thing in general is searchability of films in general. Recently I found a &lt;a href="https://www.reddit.com/r/criterion/comments/ddg08d/channel_software_engineers_your_input_validation/">reddit post&lt;/a> revealing another big search annoyance: bad handling of matching strings with accented titles, particularly when searching for &amp;lsquo;samourai&amp;rsquo; and expecting &amp;lsquo;Le Samouraï&amp;rsquo; to pop up in the results:&lt;/p></description></item><item><title>A Simple Introduction to Javascript Map and Reduce Array Helper Functions</title><link>https://www.davidbcalhoun.com/2018/a-simple-introduction-to-javascript-map-and-reduce-array-helper-functions/</link><pubDate>Sun, 26 Aug 2018 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2018/a-simple-introduction-to-javascript-map-and-reduce-array-helper-functions/</guid><description>&lt;link itemprop="mainEntityOfPage" href="https://en.wikipedia.org/wiki/JavaScript">
&lt;p>Perhaps you&amp;rsquo;ve been programming for a while, and you&amp;rsquo;re pretty comfortable using &lt;code>for&lt;/code> loops to traverse Arrays. However, you know how untidy and complicated &lt;code>for&lt;/code> loops can get, and you are interested in better approaches to keep the code clean. Enter &lt;code>map&lt;/code> and &lt;code>reduce&lt;/code>!&lt;/p>
&lt;h2 id="first-steps-with-for-loops">First steps with &lt;code>for&lt;/code> loops&lt;/h2>
&lt;p>Most folks find &lt;code>for&lt;/code> loops powerful enough to achieve all they need when they need to process items in an &lt;code>Array&lt;/code>. For example, say we have a simple list of items:&lt;/p></description></item><item><title>async.parallel with a simple timeout (node.js)</title><link>https://www.davidbcalhoun.com/2014/async.parallel-with-a-simple-timeout-node.js/</link><pubDate>Mon, 08 Sep 2014 00:36:52 -0700</pubDate><guid>https://www.davidbcalhoun.com/2014/async.parallel-with-a-simple-timeout-node.js/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>A while back I had a need for a general timeout option for async.parallel and was surprised I couldn&amp;rsquo;t find much information about how to do it. I was using async.parallel to make a lot of REST calls in parallel, but one of them was getting blocked by a firewall, resulting in an eventual timeout minutes later.&lt;/p></description></item><item><title>What is AMD, CommonJS, and UMD?</title><link>https://www.davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/</link><pubDate>Wed, 30 Apr 2014 11:59:21 -0700</pubDate><guid>https://www.davidbcalhoun.com/2014/what-is-amd-commonjs-and-umd/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>Over the years there&amp;rsquo;s been a steadily increasing ecosystem of JavaScript components to choose from. The sheer amount of choices is fantastic, but this also infamously presents a difficulty when components are mixed-and-matched. And it doesn&amp;rsquo;t take too long for budding developers to find out that not all components are built to play nicely together.&lt;/p></description></item><item><title>Introducing Negative Scroll Blur (for browsers that support CSS filters)</title><link>https://www.davidbcalhoun.com/2013/introducing-negative-scroll-blur-for-browsers-that-support-css-filters/</link><pubDate>Sat, 23 Nov 2013 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2013/introducing-negative-scroll-blur-for-browsers-that-support-css-filters/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>(2016: in retrospect, this is kind of gratuitous and doesn&amp;rsquo;t appear to be fully working anymore&amp;hellip;)&lt;/p>
&lt;p>&lt;a href="https://www.davidbcalhoun.com/a/_old%20mobile%20tests/negative-scroll-blur.html">Demo&lt;/a>&lt;/p>
&lt;p>Just for fun, I wanted to reproduce a cool but completely superfluous UI I saw in the updated Foursquare app recently. Basically, when the user tries to scroll past the upper bound of the app/page, the header image becomes blurred.&lt;/p></description></item><item><title>You Can't JavaScript Under Pressure walkthrough</title><link>https://www.davidbcalhoun.com/2013/you-cant-javascript-under-pressure-walkthrough/</link><pubDate>Fri, 04 Oct 2013 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2013/you-cant-javascript-under-pressure-walkthrough/</guid><description>&lt;p>A friend posted a link to this fun little quiz - &lt;a href="http://toys.usvsth3m.com/javascript-under-pressure/">You Can&amp;rsquo;t JavaScript Under Pressure&lt;/a>.&lt;/p>
&lt;p>The quizzes get more and more difficult, and they present a nice challenge if you fear your skills are getting rusty. Give it an honest try first, then come back here if you get seriously, honestly stuck. Try to do it yourself!&lt;/p>
&lt;h3 id="quiz-1-doubleinteger">Quiz 1: doubleInteger&lt;/h3>
&lt;h4 id="problem">Problem&lt;/h4>
&lt;pre>&lt;code>function doubleInteger(i) {
 // i will be an integer. Double it and return it.

 return i;
}
&lt;/code>&lt;/pre>
&lt;p>{:lang=&amp;ldquo;javascript&amp;rdquo;}&lt;/p></description></item><item><title>iOS5 SunSpider: iPhone 4S vs iPhone 4 vs iPhone 3GS</title><link>https://www.davidbcalhoun.com/2011/ios5-sunspider-iphone-4s-vs-iphone-4-vs-iphone-3gs/</link><pubDate>Fri, 14 Oct 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/ios5-sunspider-iphone-4s-vs-iphone-4-vs-iphone-3gs/</guid><description>&lt;h3 id="result-table-sunspider-091-all-devices-running-ios-5">Result table (SunSpider 0.9.1, all devices running iOS 5)&lt;/h3>
&lt;table style="width: 100%;">
 &lt;tr>
 &lt;td>
 Test
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 iPhone 4S
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 iPhone 4
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 iPhone 3GS
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Total
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 2270ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 3483ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 4903ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 3D
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 281ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 486ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 672ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Access
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 279ms
&amp;lt;/td&amp;gt;&amp;lt;/td&amp;gt; 

&amp;lt;td&amp;gt;
 410ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 614ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Bitops
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 177ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 200ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 270ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Controlflow
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 20ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 26ms
&amp;lt;/td&amp;gt;&amp;lt;/td&amp;gt; 

&amp;lt;td&amp;gt;
 34ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Crypto
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 164ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 211ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 315ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Date
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 332ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 528ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 770ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Math
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 219ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 433ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 553ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Regexp
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 88ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 117ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 151ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 String
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 711ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1072ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1525ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
&lt;/table>
&lt;h3 id="raw-results">Raw results&lt;/h3>
&lt;p>&lt;a href="http://www.webkit.org/perf/sunspider-0.9.1/sunspider-0.9.1/results.html?%7B%22v%22:%20%22sunspider-0.9.1%22,%20%223d-cube%22:%5B98,100,97,101,98,98,99,99,100,105%5D,%223d-morph%22:%5B72,75,72,74,72,74,72,72,72,73%5D,%223d-raytrace%22:%5B107,107,108,111,108,108,108,109,110,108%5D,%22access-binary-trees%22:%5B48,48,53,51,47,49,51,54,52,47%5D,%22access-fannkuch%22:%5B121,120,124,120,121,121,120,120,125,120%5D,%22access-nbody%22:%5B70,72,71,71,71,72,70,70,69,70%5D,%22access-nsieve%22:%5B35,40,38,38,37,35,35,36,38,37%5D,%22bitops-3bit-bits-in-byte%22:%5B29,29,29,28,29,29,29,29,29,29%5D,%22bitops-bits-in-byte%22:%5B39,36,37,39,37,36,36,37,38,37%5D,%22bitops-bitwise-and%22:%5B47,48,48,46,49,48,49,51,48,47%5D,%22bitops-nsieve-bits%22:%5B65,63,62,62,62,62,63,63,63,62%5D,%22controlflow-recursive%22:%5B19,20,20,20,19,20,20,19,20,20%5D,%22crypto-aes%22:%5B94,96,96,100,103,102,96,96,96,99%5D,%22crypto-md5%22:%5B36,37,37,38,37,36,39,36,38,39%5D,%22crypto-sha1%22:%5B29,28,30,28,30,29,29,28,29,29%5D,%22date-format-tofte%22:%5B171,182,167,168,170,172,167,170,181,172%5D,%22date-format-xparb%22:%5B160,159,161,158,160,168,162,156,159,158%5D,%22math-cordic%22:%5B81,79,76,77,77,77,78,77,76,77%5D,%22math-partial-sums%22:%5B92,92,92,92,94,92,92,91,92,94%5D,%22math-spectral-norm%22:%5B49,49,49,49,51,49,49,50,48,52%5D,%22regexp-dna%22:%5B91,87,88,87,88,88,88,87,88,87%5D,%22string-base64%22:%5B89,88,86,92,87,91,96,87,87,87%5D,%22string-fasta%22:%5B91,92,92,91,94,94,95,95,89,89%5D,%22string-tagcloud%22:%5B144,147,147,145,144,145,144,144,148,150%5D,%22string-unpack-code%22:%5B246,243,238,244,254,249,243,249,240,238%5D,%22string-validate-input%22:%5B145,134,136,137,140,137,137,137,141,149%5D%7D">iPhone 4S (iOS5)&lt;/a>&lt;/p></description></item><item><title>Different ways of defining functions in JavaScript (this is madness!)</title><link>https://www.davidbcalhoun.com/2011/different-ways-of-defining-functions-in-javascript-this-is-madness/</link><pubDate>Fri, 24 Jun 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/different-ways-of-defining-functions-in-javascript-this-is-madness/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>Note: updated in July 2016 with ES6 arrow functions.&lt;/p>
&lt;p>&lt;a href="http://langtoday.com/?p=303">Russian translation&lt;/a> thanks to Yevgeniy Pyastolov&lt;/p>
&lt;h3 id="this-is-madness-this-is-javascript">This is madness! This&amp;hellip; is&amp;hellip; JavaScript!&lt;/h3>
&lt;p>In JavaScript, there&amp;rsquo;s many different ways of doing something. This is both a good thing and a bad thing. To the newcomer this is definitely a bad thing, as it means not only more things to learn, but more little caveats and more places to go wrong. And so it is with declaring functions!&lt;/p></description></item><item><title>Android 3.0 Honeycomb is first to implement the Device API</title><link>https://www.davidbcalhoun.com/2011/android-3.0-honeycomb-is-first-to-implement-the-device-api/</link><pubDate>Thu, 24 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/android-3.0-honeycomb-is-first-to-implement-the-device-api/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>I fired up the newly released Android 3.0 SDK to run some tests and found they&amp;rsquo;ve implemented part of the long-awaited &lt;a href="http://www.w3.org/2009/dap/">Device API&lt;/a> (aka the Media Capture API). From your browser you can now upload pictures and videos from the camera as well as sounds from the microphone. The returned data should be available to manipulate via the &lt;a href="http://www.w3.org/TR/FileAPI/">File API&lt;/a> (although I haven&amp;rsquo;t yet tested this).&lt;/p></description></item><item><title>Checking for undefined, null, and empty variables in JavaScript</title><link>https://www.davidbcalhoun.com/2011/checking-for-undefined-null-and-empty-variables-in-javascript/</link><pubDate>Fri, 11 Feb 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/checking-for-undefined-null-and-empty-variables-in-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>In general it&amp;rsquo;s a good practice to check for the existence of something before blindly using it by faith and hoping it works. There are various times during the execution of scripts when a variable may not be defined, it may be null, or it might be an empty string. These are three things that are easily conflated. A good way to look at this is thinking of these as having increasing levels of existence (getting a bit philosophical here for a moment&amp;hellip;):&lt;/p></description></item><item><title>JavaScript SunSpider benchmark: iOS 4.3 vs iOS 4.0</title><link>https://www.davidbcalhoun.com/2011/javascript-sunspider-benchmark-ios-4.3-vs-ios-4.0/</link><pubDate>Sat, 22 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/javascript-sunspider-benchmark-ios-4.3-vs-ios-4.0/</guid><description>&lt;h3 id="result-table-sunspider-091">Result table (SunSpider 0.9.1)&lt;/h3>
&lt;table>
 &lt;tr>
 &lt;td>
 Test
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 iOS 4 (3GS)
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 iOS 4.3 beta 2 (3GS)
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 % change
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Total
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 13787ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 5357ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -61.1%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 3D
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1917ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 737ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -61.6%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Access
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1893ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 617ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -67.4%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Bitops
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1239ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 289ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -76.7%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Controlflow
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 221ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 35ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -84.2%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Crypto
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 850ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 308ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -63.8%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Date
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1065ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 706ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -33.7%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Math
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1511ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 606ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -59.9%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Regexp
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1916ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 153ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -92.0%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 String
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 3175ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 1907ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -39.9%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
&lt;/table>
&lt;h3 id="raw-results-ios-43-beta-2-running-on-my-iphone-3gs">Raw results (iOS 4.3 beta 2 running on my iPhone 3GS)&lt;/h3>
&lt;pre>============================================
RESULTS (means and 95% confidence intervals)
--------------------------------------------
Total: 5357.3ms +/- 2.3%
--------------------------------------------

 3d: 736.9ms +/- 7.5%
 cube: 260.1ms +/- 3.5%
 morph: 206.0ms +/- 23.2%
 raytrace: 270.8ms +/- 4.4%

 access: 617.4ms +/- 4.1%
 binary-trees: 118.8ms +/- 4.7%
 fannkuch: 180.4ms +/- 0.7%
 nbody: 222.0ms +/- 11.7%
 nsieve: 96.2ms +/- 0.8%

 bitops: 288.7ms +/- 9.6%
 3bit-bits-in-byte: 38.0ms +/- 4.3%
 bits-in-byte: 70.5ms +/- 39.0%
 bitwise-and: 85.1ms +/- 1.9%
 nsieve-bits: 95.1ms +/- 2.1%

 controlflow: 34.7ms +/- 3.2%
 recursive: 34.7ms +/- 3.2%

 crypto: 308.3ms +/- 1.1%
 aes: 175.2ms +/- 0.5%
 md5: 79.3ms +/- 3.9%
 sha1: 53.8ms +/- 0.8%

 date: 706.2ms +/- 5.5%
 format-tofte: 341.3ms +/- 11.0%
 format-xparb: 364.9ms +/- 1.1%

 math: 605.9ms +/- 1.1%
 cordic: 224.5ms +/- 1.0%
 partial-sums: 263.4ms +/- 2.3%
 spectral-norm: 118.0ms +/- 1.2%

 regexp: 152.5ms +/- 5.5%
 dna: 152.5ms +/- 5.5%

 string: 1906.7ms +/- 0.7%
 base64: 247.9ms +/- 2.4%
 fasta: 268.5ms +/- 0.6%
 tagcloud: 370.4ms +/- 3.0%
 unpack-code: 676.2ms +/- 0.3%
 validate-input: 343.7ms +/- 1.4%
&lt;/pre>
&lt;p>&lt;a href="http://davidbcalhoun.com/wp-content/uploads/2010/iOS-4-GM.html">Raw results for iOS 4.0&lt;/a>&lt;/p></description></item><item><title>JavaScript news resources</title><link>https://www.davidbcalhoun.com/2011/javascript-news-resources/</link><pubDate>Fri, 14 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/javascript-news-resources/</guid><description>&lt;p>There&amp;rsquo;s an overwhelming amount of information being pumped out of the JavaScript community each week, but how do you keep up with it? Here&amp;rsquo;s some sources to keep you busy.&lt;/p>
&lt;h3 id="twitter">Twitter&lt;/h3>
&lt;p>This merits a category of its own. This has replaced the RSS reader for a lot of folks, or at the very least supplemented it.&lt;/p>
&lt;p>I&amp;rsquo;ve consistently recommended &lt;a href="http://twitter.com/#!/nathansmith/javascript/">Nathan Smith&amp;rsquo;s list of JavaScript folks&lt;/a>. When I&amp;rsquo;m diligent, I keep up with this several times a week and &lt;a href="http://twitter.com/#!/franksvalli/favorites/">favorite items from the feed&lt;/a> to be considered for inclusion in that week&amp;rsquo;s &lt;a href="http://jsmag.com/blog/">JSMag Blog update&lt;/a>.&lt;/p></description></item><item><title>What happens when you have no JavaScript fallback?</title><link>https://www.davidbcalhoun.com/2011/what-happens-when-you-have-no-javascript-fallback/</link><pubDate>Wed, 12 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/what-happens-when-you-have-no-javascript-fallback/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>&lt;a href="http://davidbcalhoun.com/wp-content/uploads/2011/01/twitter-fallback.png">&lt;img src="http://davidbcalhoun.com/wp-content/uploads/2011/01/twitter-fallback.png" alt="" title="Twitter no-JavaScript fallback" class="aligncenter size-full wp-image-556" />&lt;/a>&lt;/p>
&lt;p>Here&amp;rsquo;s an example of what happens when your interface completely relies on JavaScript. There&amp;rsquo;s code with translated &lt;a href="http://en.wikipedia.org/wiki/Mojibake">mojibake&lt;/a> of some sort which caused the JavaScript to break. The code wasn&amp;rsquo;t in a try-catch block, so it caused all of the code on the page to fail, thus presenting me with the only part of the screen that wasn&amp;rsquo;t generated by JavaScript: the completely useless header.&lt;/p></description></item><item><title>How to spot outdated JavaScript</title><link>https://www.davidbcalhoun.com/2011/how-to-spot-outdated-javascript/</link><pubDate>Fri, 07 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/how-to-spot-outdated-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>Those that are just setting out to learn JavaScript are typically overwhelmed by the amount of online resources to be found about learning JavaScript. Not only this, but every webpage visited presents a potential learning opportunity just by inspecting the source.&lt;/p>
&lt;p>However, not all resources are guaranteed to be up-to-date. JavaScript has been around for over a decade, and coding standards have changed drastically over time. While a code snippet may still work in today&amp;rsquo;s browsers, you may unknowingly be using an outdated practice that might eventually lead to a bit of embarrassment.&lt;/p></description></item><item><title>What is a closure in JavaScript?</title><link>https://www.davidbcalhoun.com/2011/what-is-a-closure-in-javascript/</link><pubDate>Mon, 03 Jan 2011 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2011/what-is-a-closure-in-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="intro">Intro&lt;/h3>
&lt;p>There have been many attempts to answer this question in a succinct way, but I haven&amp;rsquo;t really been satisfied by them. Here&amp;rsquo;s my attempt at a (relatively) concise explanation.&lt;/p>
&lt;p>This is adapted from a &lt;a href="http://www.reddit.com/r/javascript/comments/eti86/can_somebody_explain_closures_to_me/c1atir1">reply I posted on reddit&lt;/a> which people seemed to have found useful.&lt;/p>
&lt;h3 id="broad-definition">Broad definition&lt;/h3>
&lt;p>Normally when people talk about closures in JavaScript, they&amp;rsquo;re talking about methods and properties that outlive the scope of their original function (more on that in a second), but actually the definition is a bit broader. A closure is how a function &amp;ldquo;closes over&amp;rdquo; (Crockford) its variables and creates a different scope for them out of the way of the global [window] scope. So an understanding of closures will require some understanding of scope, which is definitely a common stumbling block in first learning JavaScript.&lt;/p></description></item><item><title>Mobile JavaScript libraries and frameworks (Mobile Web Part 7)</title><link>https://www.davidbcalhoun.com/2010/mobile-javascript-libraries-and-frameworks-mobile-web-part-7/</link><pubDate>Mon, 06 Dec 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/mobile-javascript-libraries-and-frameworks-mobile-web-part-7/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="intro">Intro&lt;/h3>
&lt;p>This is designed to be a &amp;ldquo;living&amp;rdquo; post of available materials which will hopefully be updated frequently.&lt;/p>
&lt;p>Right now there&amp;rsquo;s not much, just some links, but I hope to keep adding materials, so check back!&lt;/p>
&lt;h3 id="the-list">The List&lt;/h3>
&lt;p>&lt;a href="http://www.sencha.com/products/touch/">Sencha Touch&lt;/a>&lt;br>
&lt;a href="http://www.phonegap.com/">PhoneGap&lt;/a> - native wrapper which provides access to native hardware through their own JavaScript APIs&lt;br>
&lt;a href="http://jquerymobile.com/">jQuery Mobile&lt;/a> - a separate mobile UI which has jQuery as a dependency&lt;br>
&lt;a href="http://developer.apple.com/iad/">iAd&lt;/a> - an update to Apple&amp;rsquo;s PastryKit, but probably intended only for ads&lt;br>
&lt;a href="http://zeptojs.com/">Zepto.js&lt;/a>&lt;br>
&lt;a href="http://joapp.com/">Jo HTML5 Mobile App Framework&lt;/a>&lt;br>
&lt;a href="http://touch.sproutcore.com/hedwig/">Sproutcore Touch&lt;/a>&lt;br>
&lt;a href="http://unify.github.com/unify/">Unify&lt;/a>&lt;br>
&lt;a href="http://developer.yahoo.com/yui/3/">YUI3&lt;/a> - the desktop library has taken its first steps in supporting mobile (there&amp;rsquo;s no separate version just for mobile)&lt;br>
&lt;a href="http://www.springsource.org/spring-mobile">Spring Mobile&lt;/a>: an extension to Spring MVC.&lt;br>
&lt;a href="http://pyxismobile.com/">pyxis mobile&lt;/a>&lt;br>
&lt;a href="http://www.winktoolkit.org/">Wink Toolkit&lt;/a>&lt;br>
&lt;a href="http://chocolatechipmobile.wordpress.com/">ChocolateChip Mobile&lt;/a>&lt;br>
&lt;a href="http://webapp-net.com/">WebApp.Net&lt;/a>&lt;br>
&lt;a href="http://paularmstrongdesigns.com/projects/basejs/">baseJS&lt;/a>&lt;br>
&lt;a href="http://xuijs.com/">XUI&lt;/a>&lt;br>
&lt;a href="http://iwebkit.net/">iWebKit&lt;/a>&lt;br>
&lt;a href="http://www.jqtouch.com/">jQTouch&lt;/a>&lt;br>
&lt;a href="http://notes.sencha.com/post/1483278482/wed-like-to-extend-a-warm-welcome-to-one-of-our">MooTouch&lt;/a> - acquired and integrated into Sencha&lt;br>
&lt;a href="http://code.google.com/p/iphone-universal/">UiUIKit (Universal iPhone UI Kit)&lt;/a>&lt;br>
&lt;a href="http://code.google.com/p/ciui-dev/">CiUI&lt;/a> - CNET iPhone UI&lt;br>
&lt;a href="">UiUIKit&lt;/a>&lt;br>
&lt;a href="http://www.iui-js.org/">iUI&lt;/a> (&lt;a href="http://code.google.com/p/iui/">on Google Code&lt;/a>) - the first library for the iPhone as far as I know.&lt;br>
&lt;a href="http://davidbcalhoun.com/2009/pastrykit-digging-into-an-apple-pie">PastryKit&lt;/a> - Apple&amp;rsquo;s proprietary framework, peeked into just for curiousity (not recommended for use)&lt;/p></description></item><item><title>What happens when we serve JavaScript with random MIME types?</title><link>https://www.davidbcalhoun.com/2010/what-happens-when-we-serve-javascript-with-random-mime-types/</link><pubDate>Mon, 01 Nov 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/what-happens-when-we-serve-javascript-with-random-mime-types/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>When people started to learn about the HTML5 doctype, they kind of freaked out a little, not knowing how older browsers would handle it. A &lt;a href="http://www.dustindiaz.com/skinny-on-doctypes/">post by Dustin Diaz&lt;/a> prompted me to test out how pages rendered (in QuirksMode or Standards Mode) with a little help from &lt;code>document.compatMode&lt;/code>, and &lt;a href="http://themaingate.net/dev/html/all-you-need-is-doctype-html">I found that surprisingly every browser rendered in Standards Mode with the new doctype&lt;/a>. In other words, no need to worry!&lt;/p></description></item><item><title>JavaScript links from last week (September 26)</title><link>https://www.davidbcalhoun.com/2010/javascript-links-from-last-week-september-26/</link><pubDate>Tue, 05 Oct 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/javascript-links-from-last-week-september-26/</guid><description>&lt;p>&lt;a href="http://erkie.github.com/">JavaScript Asteroids&lt;/a> - blow up any webpage with this bookmarklet!&lt;/p>
&lt;p>&lt;a href="http://js1k.com">JS1k contest&lt;/a> - and the &lt;a href="http://marijn.haverbeke.nl/js1k.html">winner&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://www.wait-till-i.com/2010/09/26/promote-better-javascript-documentation-with-promotejs/">PromoteJS&lt;/a> - Google bombing with a good intent. Better links to JavaScript documentation!&lt;/p>
&lt;p>&lt;a href="http://webkit.org/blog/1395/running-scripts-in-webkit/">Async and defer attributes for Script tags added to WebKit&lt;/a>&lt;/p>
&lt;p>&lt;a href="http://samy.pl/evercookie/">Evercookie&lt;/a> - uses devious ways to try to track users. Hmm, this one is questionable. Please use it for good, not evil&amp;hellip; :/&lt;/p>
&lt;p>&lt;a href="http://jsperf.com">JSPerf.com&lt;/a> - not really new news, but a nice quick way to test algorithm performance in JavaScript&lt;/p></description></item><item><title>Server side console.log</title><link>https://www.davidbcalhoun.com/2010/server-side-console.log/</link><pubDate>Wed, 15 Sep 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/server-side-console.log/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="the-problem">The problem&lt;/h3>
&lt;p>On the desktop we&amp;rsquo;re quite privileged to have nice debugging tools such as Firebug and Web Inspector in Webkit-based browsers. But when it comes to mobile, debugging JavaScript with &lt;code>console.log&lt;/code>.&lt;/p>
&lt;p>isn&amp;rsquo;t quite as easy.&lt;/p>
&lt;p>Probably the best available tool on mobile at the moment is mobile Safari&amp;rsquo;s console, which looks like the following when enabled (Settings -&amp;gt; Safari -&amp;gt; Developer -&amp;gt; Debug Console):&lt;/p></description></item><item><title>Optimizing based on connection speed: using navigator.connection on Android 2.2+</title><link>https://www.davidbcalhoun.com/2010/optimizing-based-on-connection-speed-using-navigator.connection-on-android-2.2-/</link><pubDate>Tue, 14 Sep 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/optimizing-based-on-connection-speed-using-navigator.connection-on-android-2.2-/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>A little while back &lt;a href="http://www.mobilexweb.com/blog/android-froyo-html5-accelerometer-flash-player">this post&lt;/a> made the rounds, which took us on a journey through some of the new features introduced in the browser in Android 2.2 Froyo. Among the most overlooked features are the file upload functionality (you can upload photos from your browser now! But we&amp;rsquo;re still waiting on iPhone to support this&amp;hellip;) and a little-known JavaScript addition to the Browser Object Model (BOM) in the form of &lt;code>navigator.connection&lt;/code>. Let&amp;rsquo;s take a peek at its contents:&lt;/p></description></item><item><title>Dealing with device orientation (Mobile web part 6)</title><link>https://www.davidbcalhoun.com/2010/dealing-with-device-orientation-mobile-web-part-6/</link><pubDate>Tue, 24 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/dealing-with-device-orientation-mobile-web-part-6/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>If you read &lt;a href="https://www.davidbcalhoun.com/2010/on-designing-a-mobile-webpage">part 4&lt;/a> of this series, you&amp;rsquo;ll know that because of the variety of screen sizes, the best way to develop for mobile is to develop fluid layouts that take 100% of the available space on the screen.&lt;/p>
&lt;p>What you probably didn&amp;rsquo;t think of is that there&amp;rsquo;s different screen widths &lt;em>even on the same device&lt;/em>! This is due to screen orientation. And when the user changes the screen orientation, stuff may break (hey, it&amp;rsquo;s not a perfect world). In my experience this has meant needing to tweak percentage widths on elements, but I imagine there&amp;rsquo;s even more needs. Imagine an image carousel that can only fit three images across in portrait mode but can possibly fit four images in landscape mode. It might be nice to re-initialize the carousel to accommodate a forth image when the phone is in landscape mode (then again, that might create a lot of unnecessary overhead&amp;hellip;).&lt;/p></description></item><item><title>BlackBerry Torch SunSpider results (JavaScript benchmark)</title><link>https://www.davidbcalhoun.com/2010/blackberry-torch-sunspider-results-javascript-benchmark/</link><pubDate>Wed, 18 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/blackberry-torch-sunspider-results-javascript-benchmark/</guid><description>&lt;h3 id="results">Results&lt;/h3>
&lt;pre tabindex="0">&lt;code>============================================
RESULTS (means and 95% confidence intervals)
--------------------------------------------
Total: 322.2ms +/- 4.9%
--------------------------------------------

 3d: 55.0ms +/- 15.3%
 cube: 19.8ms +/- 12.1%
 morph: 16.6ms +/- 35.8%
 raytrace: 18.6ms +/- 22.5%

 access: 32.8ms +/- 12.4%
 binary-trees: 1.8ms +/- 30.9%
 fannkuch: 14.2ms +/- 7.3%
 nbody: 12.6ms +/- 26.7%
 nsieve: 4.2ms +/- 24.8%

 bitops: 29.4ms +/- 10.2%
 3bit-bits-in-byte: 2.4ms +/- 28.4%
 bits-in-byte: 8.0ms +/- 15.5%
 bitwise-and: 8.6ms +/- 21.9%
 nsieve-bits: 10.4ms +/- 21.7%

 controlflow: 2.4ms +/- 28.4%
 recursive: 2.4ms +/- 28.4%

 crypto: 22.0ms +/- 10.6%
 aes: 9.8ms +/- 27.5%
 md5: 6.2ms +/- 22.0%
 sha1: 6.0ms +/- 20.7%

 date: 33.2ms +/- 11.7%
 format-tofte: 16.6ms +/- 20.2%
 format-xparb: 16.6ms +/- 13.6%

 math: 32.6ms +/- 15.2%
 cordic: 12.0ms +/- 29.3%
 partial-sums: 15.2ms +/- 20.4%
 spectral-norm: 5.4ms +/- 20.6%

 regexp: 15.6ms +/- 7.1%
 dna: 15.6ms +/- 7.1%

 string: 99.2ms +/- 14.0%
 base64: 9.2ms +/- 14.8%
 fasta: 14.4ms +/- 27.7%
 tagcloud: 27.2ms +/- 23.2%
 unpack-code: 31.8ms +/- 14.5%
 validate-input: 16.6ms +/- 18.0%
&lt;/code>&lt;/pre>&lt;h3 id="related-articles">Related articles&lt;/h3>
&lt;p>&lt;a href="http://davidbcalhoun.com/2010/iphone-4-sunspider-test-results">iPhone 4 SunSpider test results (22% faster than iPhone 3GS)&lt;/a>&lt;br>
&lt;a href="http://davidbcalhoun.com/2010/sunspider-ios-3-1-3-versus-ios-4-gm">JavaScript SunSpider test: iOS 3.1.3 versus iOS 4 GM&lt;/a>&lt;br>
&lt;a href="http://davidbcalhoun.com/2010/javascript-sunspider-htc-evo-versus-htc-incredible-versus-nexus-one">JavaScript SunSpider: HTC Evo versus HTC Incredible versus Nexus One&lt;/a>&lt;br>
&lt;a href="http://www.sencha.com/blog/2010/08/18/blackberry-torch-the-html5-developer-scorecard/">Sencha: BlackBerry Torch: The HTML5 Developer Scorecard&lt;/a>&lt;/p></description></item><item><title>Is a hash faster than a Switch in JavaScript?</title><link>https://www.davidbcalhoun.com/2010/is-a-hash-faster-than-a-switch-in-javascript/</link><pubDate>Tue, 17 Aug 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/is-a-hash-faster-than-a-switch-in-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>I stumbled across this concept recently and I thought I&amp;rsquo;d share it, because I don&amp;rsquo;t generally see this pattern being used. More importantly, I also share test results that show that maybe it&amp;rsquo;s not always a good idea to use this pattern&amp;hellip;&lt;/p>
&lt;h3 id="the-problem-with-switch-statements">The problem with Switch statements&lt;/h3>
&lt;p>The basic switch statement in JavaScript looks something like this:&lt;/p></description></item><item><title>Thursday links (July 8)</title><link>https://www.davidbcalhoun.com/2010/thursday-links-july-8/</link><pubDate>Thu, 08 Jul 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/thursday-links-july-8/</guid><description>&lt;h3 id="mobile">Mobile&lt;/h3>
&lt;p>&lt;a href="http://googlemobile.blogspot.com/2010/07/youtube-mobile-gets-kick-start.html">YouTube Mobile Gets a Kick Start&lt;/a>&lt;br>
&lt;a href="http://blog.laptopmag.com/htc-droid-incredible-vs-palm-pre-plus">Battle of Champions: HTC Droid Incredible vs. Palm Pre Plus&lt;/a>&lt;br>
&lt;a href="http://www.lukew.com/ff/entry.asp?1142">Designing for the Retina Display (326ppi)&lt;/a>&lt;br>
&lt;a href="http://webstylemag.com/you-dont-know-mobile" class="audio">AUDIO: John Resig: You Don’t Know Mobile (Webstyle Magazine)&lt;/a> – ~$5,000 minimum to do mobile testing&lt;br>
&lt;a href="http://www.amazon.com/Tapworthy-Designing-Great-iPhone-Apps/dp/1449381650">Tapworthy: Designing Great iPhone Apps&lt;/a>&lt;br>
&lt;a href="http://www.intomobile.com/2010/07/08/emobile-we-have-the-fastest-network-in-japan/">eMobile: We have the fastest network in Japan!&lt;/a>&lt;br>
&lt;a href="http://ymobileblog.com/blog/2010/07/08/apple-ipad-user-analysis-%E2%80%94-phase-ii/">Apple iPad User Analysis — Phase II&lt;/a>&lt;br>
&lt;a href="http://www.youtube.com/watch?v=6_TFHqIHBqM" class="video">VIDEO: Using iPhone with a Braille display (Victor Tsaran)&lt;/a>&lt;br>
&lt;a href="http://www.pewinternet.org/Reports/2010/Mobile-Access-2010.aspx">Mobile Access 2010 (Pew Research)&lt;/a>&lt;br>
&lt;a href="http://www.prnewswire.com/news-releases/comscore-reports-may-2010-us-mobile-subscriber-market-share-98031904.html">BlackBerry and iPhone losing ground to Android, overall smartphone growth (comScore data)&lt;/a>&lt;/p></description></item><item><title>Using mobile-specific HTML, CSS, and JavaScript (Mobile web part 5)</title><link>https://www.davidbcalhoun.com/2010/using-mobile-specific-html-css-and-javascript-mobile-web-part-5/</link><pubDate>Tue, 29 Jun 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/using-mobile-specific-html-css-and-javascript-mobile-web-part-5/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>&lt;em>(updated June 27, 2011)&lt;/em>&lt;/p>
&lt;h3 id="mobile-specific-html">Mobile-specific HTML&lt;/h3>
&lt;h4 id="viewport-tag">Viewport tag&lt;/h4>
&lt;p>Use the &lt;a href="http://davidbcalhoun.com/2010/viewport-metatag">viewport tag&lt;/a> to properly fit the content to the screen:&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="tel-scheme-to-initiate-phone-calls">&lt;a href="http://www.rfc-editor.org/rfc/rfc3966.txt">Tel scheme&lt;/a> (to initiate phone calls)&lt;/h4>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tel:18005555555&amp;#34;&lt;/span>&amp;gt;Call us at 1-800-555-5555&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="sms-scheme-to-initiate-text-messages">&lt;a href="http://www.rfc-editor.org/rfc/rfc5724.txt">Sms scheme&lt;/a> (to initiate text messages)&lt;/h4>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sms:18005555555&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sms:18005555555,18005555556&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- multiple recipients --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">a&lt;/span> &lt;span style="color:#a6e22e">href&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;sms:18005555555?body=Text%20goes%20here&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">&amp;lt;!-- predefined message body --&amp;gt;&lt;/span>&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;gt;&amp;lt;/&lt;span style="color:#f92672">a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="disable-automatic-telephone-number-linking">Disable automatic telephone number linking&lt;/h4>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-html" data-lang="html">&lt;span style="display:flex;">&lt;span>&amp;lt;&lt;span style="color:#f92672">meta&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;format-detection&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">content&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;telephone=no&amp;#34;&lt;/span> /&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="ios-specific-html-some-work-on-android-as-well">iOS-specific HTML (some work on Android as well)&lt;/h4>
&lt;p>You also have access to several &lt;a href="http://developer.apple.com/library/safari/#documentation/appleapplications/reference/safariwebcontent/configuringwebapplications/configuringwebapplications.html">Apple-specific tags to use in your iOS applications (iPhone, iPad, and don&amp;rsquo;t forget the iPod Touch!)&lt;/a>.&lt;/p></description></item><item><title>iPhone 4 SunSpider test results (22% faster than iPhone 3GS)</title><link>https://www.davidbcalhoun.com/2010/iphone-4-sunspider-test-results-22-faster-than-iphone-3gs/</link><pubDate>Fri, 25 Jun 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/iphone-4-sunspider-test-results-22-faster-than-iphone-3gs/</guid><description>&lt;pre tabindex="0">&lt;code>============================================
RESULTS (means and 95% confidence intervals)
--------------------------------------------
Total: 10669.4ms +/- 1.0%
--------------------------------------------

 3d: 1471.5ms +/- 2.1%
 cube: 428.7ms +/- 2.6%
 morph: 584.3ms +/- 4.7%
 raytrace: 458.5ms +/- 0.6%

 access: 1476.7ms +/- 1.3%
 binary-trees: 151.6ms +/- 1.3%
 fannkuch: 664.0ms +/- 0.1%
 nbody: 397.9ms +/- 2.1%
 nsieve: 263.2ms +/- 6.3%

 bitops: 947.2ms +/- 2.1%
 3bit-bits-in-byte: 195.7ms +/- 2.0%
 bits-in-byte: 206.1ms +/- 1.0%
 bitwise-and: 179.7ms +/- 1.1%
 nsieve-bits: 365.7ms +/- 3.9%

 controlflow: 169.5ms +/- 8.0%
 recursive: 169.5ms +/- 8.0%

 crypto: 668.7ms +/- 1.0%
 aes: 307.0ms +/- 1.4%
 md5: 181.1ms +/- 3.1%
 sha1: 180.6ms +/- 1.0%

 date: 838.4ms +/- 4.6%
 format-tofte: 420.9ms +/- 7.4%
 format-xparb: 417.5ms +/- 2.8%

 math: 1161.9ms +/- 1.0%
 cordic: 424.9ms +/- 0.5%
 partial-sums: 385.1ms +/- 0.3%
 spectral-norm: 351.9ms +/- 2.9%

 regexp: 1479.3ms +/- 0.1%
 dna: 1479.3ms +/- 0.1%

 string: 2456.2ms +/- 0.9%
 base64: 347.6ms +/- 3.1%
 fasta: 408.1ms +/- 6.7%
 tagcloud: 447.7ms +/- 0.6%
 unpack-code: 797.8ms +/- 0.4%
 validate-input: 455.0ms +/- 0.4%
&lt;/code>&lt;/pre>&lt;h3 id="summary">Summary&lt;/h3>
&lt;p>Thanks to my coworker for lending me his phone for a few minutes (he waited in line for 9 hours yesterday when it first went on sale!).&lt;/p></description></item><item><title>JavaScript SunSpider test: iOS 3.1.3 versus iOS 4 GM</title><link>https://www.davidbcalhoun.com/2010/javascript-sunspider-test-ios-3.1.3-versus-ios-4-gm/</link><pubDate>Thu, 10 Jun 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/javascript-sunspider-test-ios-3.1.3-versus-ios-4-gm/</guid><description>&lt;h3 id="result-table">Result table&lt;/h3>
&lt;table>
 &lt;tr>
 &lt;td>
 Test
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 iOS 3.1.3 (3GS)
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 iOS 4 GM (3GS)
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 % change
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Total
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 15396ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 13787ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -10.5%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 3D
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 2411ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1917ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -20.5%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Access
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1884ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1893ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;negative&amp;quot;&amp;gt;
 +0.5%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Bitops
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1044ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1239ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;negative&amp;quot;&amp;gt;
 +18.7%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Controlflow
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 143ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 221ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;negative&amp;quot;&amp;gt;
 +54.5%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Crypto
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 982ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 850ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -13.4%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Date
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1355ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1065ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -21.4%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Math
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 2053ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1511ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -26.4%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Regexp
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1616ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1916ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;negative&amp;quot;&amp;gt;
 +18.6%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 String
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 3908ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 3175ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 -18.8%
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
&lt;/table>
&lt;h3 id="thoughts">Thoughts&lt;/h3>
&lt;p>After running these SunSpider tests, it looks like overall there’s significant speed gains between iOS 3.1.3 and iOS 4 GM. However, it’s concerning from these tests there were some things that actually ran &lt;em>slower&lt;/em> on iOS 4. This either represents a real speed loss between the versions, a margin of error, or some flaw or inconsistency while testing. Or maybe I possibly have some wrong setting on my phone? Any input would be appreciated.&lt;/p></description></item><item><title>JavaScript SunSpider: HTC Evo versus HTC Incredible versus Nexus One</title><link>https://www.davidbcalhoun.com/2010/javascript-sunspider-htc-evo-versus-htc-incredible-versus-nexus-one/</link><pubDate>Thu, 10 Jun 2010 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2010/javascript-sunspider-htc-evo-versus-htc-incredible-versus-nexus-one/</guid><description>&lt;h3 id="result-table">Result table&lt;/h3>
&lt;table>
 &lt;tr>
 &lt;td>
 Test
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 Evo (2.1)
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 Incredible (2.1)
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 Nexus One (2.2)
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Total
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 16167ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 15237ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 5452ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 3D
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 2014ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1835ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 946ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Access
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 2126ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1892ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 463ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Bitops
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1519ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1591ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 360ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Controlflow
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 243ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 206ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 20ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Crypto
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1033ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1003ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 344ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Date
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1849ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1896ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 639ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Math
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1684ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1419ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 602ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 Regexp
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 1779ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 1673ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 155ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
 &lt;tr>
 &lt;td>
 String
 &lt;/td>
&lt;pre>&lt;code>&amp;lt;td&amp;gt;
 3920ms
&amp;lt;/td&amp;gt;

&amp;lt;td&amp;gt;
 3722ms
&amp;lt;/td&amp;gt;

&amp;lt;td class=&amp;quot;positive&amp;quot;&amp;gt;
 1923ms
&amp;lt;/td&amp;gt;
&lt;/code>&lt;/pre>
 &lt;/tr>
&lt;/table>
&lt;h3 id="thoughts">Thoughts&lt;/h3>
&lt;p>The Incredible is just slightly faster than the Evo, to the point where it’s probably negligible or within a margin of error. Both of these phones run on Android 2.1 with HTC’s Sense UI modifications, and represent the latest and greatest in Android phones available on the market today. Both run on the same 1GHz Snapdragon processor (QSD8650). The Nexus One is a bit older, and runs with an older version of the Snapdragon processor (QSD8250), however it still runs at 1GHz just like the other two phones.&lt;/p></description></item><item><title>Video: John Resig - Testing, Performance Analysis, and jQuery 1.4</title><link>https://www.davidbcalhoun.com/2009/video-john-resig-testing-performance-analysis-and-jquery-1.4/</link><pubDate>Mon, 21 Dec 2009 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2009/video-john-resig-testing-performance-analysis-and-jquery-1.4/</guid><description>&lt;p>In case you hadn’t seen it yet, &lt;a href="http://ejohn.org/">John Resig&lt;/a> was kind enough to stop by Yahoo! for the December &lt;a href="http://www.meetup.com/BayJax/">Bayjax&lt;/a> meetup. Here’s the &lt;a href="https://www.youtube.com/watch?v=72wh5PnEf1k">video&lt;/a>:&lt;/p>
&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/72wh5PnEf1k" frameborder="0" allow="autoplay; encrypted-media" allowfullscreen>&lt;/iframe>
&lt;p>Usually developers are more interested in just getting the dang code to work, and as a result actual the testing and maintenance of JavaScript isn’t talked about too much, so I’m sure this will be new territory for many developers. And since it’s John Resig speaking, there was of course a bit about using &lt;a href="http://testswarm.com/">TestSwarm&lt;/a>, a testing distributed framework-agnostic automated testing tool (that’s a mouthful!).&lt;/p></description></item><item><title>JavaScript tidbit: special variables ($, $$, _, etc)</title><link>https://www.davidbcalhoun.com/2009/javascript-tidbit-special-variables-_-etc/</link><pubDate>Tue, 08 Dec 2009 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2009/javascript-tidbit-special-variables-_-etc/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>You&amp;rsquo;re probably used to typical variables names such as the following:&lt;/p>
&lt;div class="highlight">&lt;div style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">personName&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Joe&amp;#34;&lt;/span>;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You may not realize it, but there are some non-alphanumeric variables at your disposal.&lt;/p>
&lt;h3 id="using-">Using $&lt;/h3>
&lt;p>For instance, the $ variable has been made popular by several JavaScript libraries, most notably &lt;a href="http://jquery.com/">jQuery&lt;/a>. You can use it to alias operations that are commonly performed, such as the following (1):&lt;/p></description></item><item><title>Ways of passing data to functions in JavaScript</title><link>https://www.davidbcalhoun.com/2009/ways-of-passing-data-to-functions-in-javascript/</link><pubDate>Fri, 04 Dec 2009 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2009/ways-of-passing-data-to-functions-in-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;p>Passing data is quite important in functional programming languages like JavaScript. When there are multiple functions (which is most of the time), there needs to be a way to pass data between the functions. This is done by passing values in parenthesis: myFunction(myData). Even when there is no data to be passed, we still have to declare and execute functions by using parenthesis: myFunction().&lt;/p></description></item><item><title>Pitfalls of declaring variables in JavaScript</title><link>https://www.davidbcalhoun.com/2009/pitfalls-of-declaring-variables-in-javascript/</link><pubDate>Wed, 18 Nov 2009 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2009/pitfalls-of-declaring-variables-in-javascript/</guid><description>&lt;h2 id="-warning-this-is-an-old-article-and-may-include-information-thats-out-of-date-">⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️&lt;/h2>
&lt;h3 id="introduction">Introduction&lt;/h3>
&lt;p>One of the things that’s always been confusing to me is that there are multiple ways to declare variables in JavaScript, and some ways are better than others. For the beginner programmer, just getting to code to work means complete success, but for the intermediate or advanced programmer, this is just the first step. The next step is to clean up the code and make sure everything is written in the best way it could have been written.&lt;/p></description></item><item><title>JavaScript Tidbit: Block scope with let</title><link>https://www.davidbcalhoun.com/2009/javascript-tidbit-block-scope-with-let/</link><pubDate>Tue, 15 Sep 2009 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2009/javascript-tidbit-block-scope-with-let/</guid><description>&lt;p>JavaScript has &lt;strong>functional scope&lt;/strong>. Meaning that if you (properly) define variables within functions, those variables remain accessible only inside the function.&lt;/p>
&lt;p>&lt;strong>Block scope&lt;/strong>, on the other hand, defines scope within a block of code, usually defined by braces. JavaScript now has block scope as of version 1.7, which means it’s available in these browsers:&lt;/p>
&lt;ul>
&lt;li>Firefox 2+&lt;/li>
&lt;/ul>
&lt;p>Block scope is enabled in JavaScript with the use of “let”:&lt;/p>
&lt;pre name="code" class="JScript">let(x=100) {
 alert(x);
};&lt;/pre>
&lt;p>It also works perfectly well on one line, without the use of braces:&lt;/p></description></item><item><title>JavaScript Tidbit: Shorthand Object Instantiation</title><link>https://www.davidbcalhoun.com/2009/javascript-tidbit-shorthand-object-instantiation/</link><pubDate>Mon, 14 Sep 2009 00:00:00 +0000</pubDate><guid>https://www.davidbcalhoun.com/2009/javascript-tidbit-shorthand-object-instantiation/</guid><description>&lt;p>The skinny: here’s a neat little trick to reduce the amount of code users have to type to instantiate objects:&lt;/p>
&lt;pre>&lt;code>function jQuery(str, con){
 if ( window == this )
 return new jQuery(str, con);
 // ...
}

new jQuery(&amp;quot;#foo&amp;quot;); // this is now equivalent...
jQuery(&amp;quot;#foo&amp;quot;); // ...to this!
&lt;/code>&lt;/pre>
&lt;p>{:lang=&amp;ldquo;js&amp;rdquo;}&lt;/p>
&lt;p>Explanation: when jQuery(“#foo”) is typed, the function first determines if the context in which it’s being called is the global object (window).  If it is, it returns an instantiation of itself.  When it’s instantiated, the context in which it’s being called is inside its own function, and NOT within the global object (window), thus it bypasses our little instantiation trick and moves on to execute any remaining code in the function.&lt;/p></description></item></channel></rss>