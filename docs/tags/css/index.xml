<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>css on David Calhoun&#39;s blog</title>
    <link>https://www.davidbcalhoun.com/tags/css/</link>
    <description>Recent content in css on David Calhoun&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 10 Aug 2012 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.davidbcalhoun.com/tags/css/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>More fun with WebKit pseudoelements: -webkit-search-cancel-button (or: Pseudoclass Inception)</title>
      <link>https://www.davidbcalhoun.com/2012/more-fun-with-webkit-pseudoelements-webkit-search-cancel-button-or-pseudoclass-inception/</link>
      <pubDate>Fri, 10 Aug 2012 00:00:00 +0000</pubDate>
      <guid>https://www.davidbcalhoun.com/2012/more-fun-with-webkit-pseudoelements-webkit-search-cancel-button-or-pseudoclass-inception/</guid>
      <description>⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️ Introduction UPDATE 2016: this appears to have even less support than before, and it&amp;rsquo;s not recommended to be used on a production site. Use a helper JS library instead.&#xA;(check out the Demo)&#xA;A while back I had a bit of a field day messing around with input type=&amp;ldquo;range&amp;rdquo;, trying to replicate the &amp;ldquo;unlock slider&amp;rdquo; on iOS using CSS, targeting special WebKit-only CSS pseudoelements such as webkit-slider-thumb.</description>
    </item>
    <item>
      <title>Implementing iPhone&#39;s slider unlock with input type=&#39;range&#39;</title>
      <link>https://www.davidbcalhoun.com/2011/implementing-iphones-slider-unlock-with-input-typerange/</link>
      <pubDate>Sun, 16 Jan 2011 00:00:00 +0000</pubDate>
      <guid>https://www.davidbcalhoun.com/2011/implementing-iphones-slider-unlock-with-input-typerange/</guid>
      <description>⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️ (check out the live demo)&#xA;Introduction After reading &amp;ldquo;What the Heck is Shadow DOM?&amp;rdquo; I was inspired to see how far I could style the &amp;lt;input type=&amp;quot;range&amp;quot;&amp;gt; element. Pretty far, as it turns out!&#xA;My goal was to change the input&amp;rsquo;s default appearance:&#xA;To the visual appearance of the iPhone&amp;rsquo;s unlock slider:&#xA;As far as I can tell, only WebKit-based browsers and Opera have implemented input type=range.</description>
    </item>
    <item>
      <title>Thursday links (July 8)</title>
      <link>https://www.davidbcalhoun.com/2010/thursday-links-july-8/</link>
      <pubDate>Thu, 08 Jul 2010 00:00:00 +0000</pubDate>
      <guid>https://www.davidbcalhoun.com/2010/thursday-links-july-8/</guid>
      <description>Mobile YouTube Mobile Gets a Kick Start&#xA;Battle of Champions: HTC Droid Incredible vs. Palm Pre Plus&#xA;Designing for the Retina Display (326ppi)&#xA;AUDIO: John Resig: You Don’t Know Mobile (Webstyle Magazine) – ~$5,000 minimum to do mobile testing&#xA;Tapworthy: Designing Great iPhone Apps&#xA;eMobile: We have the fastest network in Japan!&#xA;Apple iPad User Analysis — Phase II&#xA;VIDEO: Using iPhone with a Braille display (Victor Tsaran)&#xA;Mobile Access 2010 (Pew Research)</description>
    </item>
    <item>
      <title>Using mobile-specific HTML, CSS, and JavaScript (Mobile web part 5)</title>
      <link>https://www.davidbcalhoun.com/2010/using-mobile-specific-html-css-and-javascript-mobile-web-part-5/</link>
      <pubDate>Tue, 29 Jun 2010 00:00:00 +0000</pubDate>
      <guid>https://www.davidbcalhoun.com/2010/using-mobile-specific-html-css-and-javascript-mobile-web-part-5/</guid>
      <description>⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️ (updated June 27, 2011)&#xA;Mobile-specific HTML Viewport tag Use the viewport tag to properly fit the content to the screen:&#xA;1 &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34; /&amp;gt; Tel scheme (to initiate phone calls) 1 &amp;lt;a href=&amp;#34;tel:18005555555&amp;#34;&amp;gt;Call us at 1-800-555-5555&amp;lt;/a&amp;gt; Sms scheme (to initiate text messages) 1 2 3 4 5 6 7 8 &amp;lt;a href=&amp;#34;sms:18005555555&amp;#34;&amp;gt; &amp;lt;a href=&amp;#34;sms:18005555555,18005555556&amp;#34;&amp;gt; &amp;lt;!</description>
    </item>
    <item>
      <title>A Clockwork Box</title>
      <link>https://www.davidbcalhoun.com/2010/a-clockwork-box/</link>
      <pubDate>Tue, 02 Mar 2010 00:00:00 +0000</pubDate>
      <guid>https://www.davidbcalhoun.com/2010/a-clockwork-box/</guid>
      <description>⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️ With CSS there are always various ways to accomplish something. After reading this short tidbit, you should be familiar with the various ways of controlling the size of an element’s padding, border, and margin, and you should know what the handy “clockwork” tip is, and how it will be useful to remember when you’re putting your CSS into practice.</description>
    </item>
    <item>
      <title>A primer on CSS colors</title>
      <link>https://www.davidbcalhoun.com/2009/a-primer-on-css-colors/</link>
      <pubDate>Tue, 29 Dec 2009 00:00:00 +0000</pubDate>
      <guid>https://www.davidbcalhoun.com/2009/a-primer-on-css-colors/</guid>
      <description>⚠️ Warning: this is an old article and may include information that&amp;rsquo;s out of date. ⚠️ Color keywords Example usage:&#xA;// Example body { color: red; } // Generalization (not actual code) body { color: color_name; } Because color names are easy to remember, they’re handy for getting quick results, especially while doing rapid prototyping.&#xA;W3C’s CSS1 recommendation first mentioned 16 color keywords that you can use: aqua, black, blue, fuchsia, gray, green, lime, maroon, navy, olive, purple, red, silver, teal, white, and yellow:</description>
    </item>
    <item>
      <title>IE Mobile 6.12 problem: browser ignores the specificity of CSS display styles</title>
      <link>https://www.davidbcalhoun.com/2009/ie-mobile-6.12-problem-browser-ignores-the-specificity-of-css-display-styles/</link>
      <pubDate>Mon, 31 Aug 2009 00:00:00 +0000</pubDate>
      <guid>https://www.davidbcalhoun.com/2009/ie-mobile-6.12-problem-browser-ignores-the-specificity-of-css-display-styles/</guid>
      <description>UPDATE: I found that the problem is actually that inline-block is completely unsupported in this version of IE Mobile, and is likely also unsupported in IE Mobile 7, which is also based on IE4. This is in contrast to desktop IE6, where inline-block is supported on elements that are natively inline (span, em, etc.).&#xA;Just found this today, for what it’s worth. If you’re unlucky enough to be working with older Windows Mobile phones you have probably realized that the browser is based on IE6, which all the desktop web developers notoriously complain about constantly.</description>
    </item>
  </channel>
</rss>
